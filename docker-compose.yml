version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  app:
    image: python:3.10-slim
    container_name: real-time-data-pipeline-app
    working_dir: /usr/src/app
    depends_on:
      - kafka
    volumes:
      - ./:/usr/src/app
    env_file:
      - .env
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt && python app_main.py"
    restart: unless-stopped
    ports:
      - "5000:5000"
  consumer:
    image: python:3.10-slim
    container_name: real-time-data-pipeline-consumer
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    env_file:
      - .env
    command: >
      sh -c "pip install --no-cache-dir -r requirements.txt && python app_kafka_consume.py"
    restart: unless-stopped
    depends_on:
      - kafka
# Note: Redis and S3 are external AWS services (ElastiCache and S3)
